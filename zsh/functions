# a small function for finding stuff
function fname() {
  find . -iname "*$@*";
}

function take() {
  mkdir -p $1
  cd $1
}

# find files by name and search and replace pattern
function findreplace() {
  echo "Number of files: $(fname $1 | wc -l)"
  fname $1 | xargs perl -pi -E "s/${2}/${3}/g"
  echo "Replaced '$2' with '$3'"
}

# find process by name and kill them
function grepkill() {
  ps -axf | grep -v grep | grep "$@" | awk '{print $2}' | xargs kill -9
  greplist "$@"
}

# find process by name and list them
function greplist() {
  ps -axf | grep -v grep | grep "$@" | awk '{print $2}'
}

read_var() {
  local USER_NAME=$(id -un)
  local ENV_FILE="/Users/${USER_NAME}/.env"

  if [ ! -z "$2" ]; then
    ENV_FILE="$2"
  fi

  local VAR=$(grep $1 "$ENV_FILE" | xargs)
  IFS="=" read -rA VAR <<< "$VAR"
  echo ${VAR[2]}
}

# vpn
gotowork() {
  local USER=$(read_var ANYCONNECT_USERNAME)
  local PASS=$(read_var ANYCONNECT_PASSWORD)
  local HOST=$(read_var ANYCONNECT_HOST)

  printf "\n${USER}\n${PASS}\ny" | /opt/cisco/anyconnect/bin/vpn -s connect $HOST
}

callitaday() {
  /opt/cisco/anyconnect/bin/vpn disconnect
}

# creates an archive from given directory
mktar() { tar cvf  "${1%%/}.tar" "${1%%/}"; }
mktgz() { tar cvzf "${1%%/}.tgz" "${1%%/}"; }
mktbz() { tar cvjf "${1%%/}.tbz" "${1%%/}"; }
mkzip() { zip -r   "${1%%/}"     "${1%%/}"; }

# easy extract
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xvjf $1    ;;
      *.tar.gz)    tar xvzf $1    ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       rar x $1       ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xvf $1     ;;
      *.tgz)       tar xvzf $1    ;;
      *.tbz2)      tar xvjf $1    ;;
      *.tbz)       tar xvjf $1    ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)           echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

function dmfixedip() {
  echo "ifconfig eth1 $2 netmask 255.255.255.0 broadcast 192.168.99.255 up" | docker-machine ssh $1 sudo tee /var/lib/boot2docker/bootsync.sh > /dev/null
}

heic-to-jpg () {
  count=$(find . -depth 1 -name "*.HEIC" | wc -l | sed 's/[[:space:]]*//')
  echo "Converting $count files .HEIC files to .jpg"

  magick mogrify -monitor -format jpg *.HEIC
  find . -depth 1 -name "*.HEIC" -delete
}
